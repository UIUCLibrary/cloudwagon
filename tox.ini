[tox]
envlist = py{310,311}
isolated_build = true

[tool:pytest]
addopts = --verbose

[testenv]
deps =
    {[testenv:pytest]deps}

whitelist_externals=
    python
    {[testenv:pytest]whitelist_externals}

commands=
    {[testenv:pytest]commands}


; ======================== tests ========================
[testenv:pytest]
deps =
    pytest
    pytest-asyncio
    pytest-timeout
whitelist_externals = pytest
commands =  pytest --basetemp={envtmpdir} {env:pytest_args:} {posargs}


[testenv:docs]
deps=
    sphinx
    sphinx-argparse
commands=
    sphinx-build {env:sphinx_args:-W -b html -d "{envtmpdir}/doctrees" docs/source  "{distdir}/html"}

[testenv:mypy]
deps =
    mypy
    types-aiofiles
    types-setuptools

skip_install=True
setenv = MYPY_CACHE_DIR = {temp_dir}/.mypy_cache
commands = mypy {posargs: src/backend/speedcloud}

[testenv:flake8]
description = check the code style
deps =
    flake8
skip_install=True
commands = flake8 {posargs: src/backend/speedcloud}


[testenv:pylint]
description = check the code style
deps =
    pylint
skip_install=True
commands =  pylint {posargs: src/backend/speedcloud} --disable import-error


[testenv:pydocstyle]
skip_install = true
deps=
    pydocstyle
    toml
commands =
    pydocstyle {posargs: {toxinidir}/src/backend/speedcloud}
[testenv:bandit]
skip_install = true
deps=
    bandit
commands =
    bandit {posargs: --recursive {toxinidir}/src/backend/speedcloud}

[testenv:ruff]
skip_install = true
deps=
    ruff
commands =
    ruff {posargs: {toxinidir}/src/backend/speedcloud}
